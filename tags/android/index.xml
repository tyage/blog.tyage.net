<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on blog.tyage.net</title><link>https://blog.tyage.net/tags/android/</link><description>Recent content in Android on blog.tyage.net</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Jan 2013 19:47:01 +0000</lastBuildDate><atom:link href="https://blog.tyage.net/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>また働き始めたこと</title><link>https://blog.tyage.net/p658/</link><pubDate>Tue, 01 Jan 2013 19:47:01 +0000</pubDate><guid>https://blog.tyage.net/p658/</guid><description>ネットではあんまり公にはしてなかったのだけど、10月ごろからまたReventive, Incにて働き始めました。
「また」ってのは、2011年の初頭にも働いていたことがあって、そのころはTitanium Mobileでチャットアプリを作っていました。
Titanium Mobileに毎日いらついていた覚えがあります。
Titanium Mobileの存在自体がトラウマ化した・・・。
んで、受験シーズンに突入したってことで一旦は抜けたんだけどまた戻って来ました。
今はCloseというSNSのAndroid版を作っています。
（一時期話題になってたので聞いたことがある方もいるかもしれません。）
JavaでのAndroidアプリの開発はほぼ未経験で、Javaも普段は触ってないのですが、一日くらいコードを眺め続けてなんとか書けるようになりました。
当然、一日で書けたのはほんの少しでしたが、二ヶ月経った今は、ある程度書けるようになったとおもいます。
それと、他人とプロジェクトを共有したり、gitを本格的に使ったりってのも今まであまりやってこなかったので勉強になりました。
iOSアプリ開発・Androidアプリの開発の両方をしているとやっぱり、Android側はIDEがあまりよくないし、端末間での誤差を調整するのがとてもつらいかなあと思います。
当然ですがOSのバージョンが違えば挙動も違うし、使える機能・使えない機能があるし、端末によって不思議なことが頻繁に起こり、苦労します。
それにリストビューとか、iOSと比べてあんまり機能が充実していないのではないかなあと感じることもしばしば。
なんにせよ辛いことが多いですが、Objective-Cを書くよりかはJava書いてるほうが気が楽ではあります。
現在気になっているのはテストの方法。。。
今まで他人のやりかたを見てなかったので、コードを書いたらそれを端末上で実行し、手動デバッグを繰り返していたのですが明らかに効率が悪い。
D○Aさんでも最終的には手動テストだと小耳に挟んだ気がするのだけど、流石にテストの効率化ぐらいはしてるだろうなあ。
Androidテスト部の方からご教授願いたいでし。
Androidアプリの開発をしていて色々と知見を得たことが多かったでし、仕事先の人は面白い人が多いです。
ただ、Close for AndroidはこのようにAndroidアプリ開発初心者も開発に携わっているため、何かと問題を抱えていることもあります。
そのため、あまり期待せずこれからの成長を暖かく見守っていただきながら、インストールしてもらえると嬉しく感じます（ステマじゃないよ宣伝だよ！）
Close for Android
Close for iOS</description></item></channel></rss>